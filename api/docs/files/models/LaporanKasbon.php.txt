<?php

namespace Model;

use Service\Db;

class LaporanKasbon
{
    /**
     * simpan class Landa DB ke variabel #db.
     */
    private $db;

    /**
     * variabel untuk menyimpan nama tabel.
     */
    private $table;

    /**
     * konstruktor memanggil library landa Db.
     */
    public function __construct()
    {
        $this->db = Db::db();
        $this->table = 't_kasbon';
    }

    /**
     * Ambil semua data kasbon.
     *
     * @param array $params
     */
    public function getAll($params = [])
    {
        if ('null' != $params['periode_mulai'] && 'null' != $params['periode_selesai']) {
            $tanggal_awal = date('Y-m-d', strtotime($params['periode_mulai']));
            $tanggal_akhir = date('Y-m-d', strtotime($params['periode_selesai']));
        } else {
            $tanggal_awal = null;
            $tanggal_akhir = null;
        }

        // Ambil list kasbon
        $this->db->select(
            $this->table.'.*, 
                karyawan_data.nama as nama_karyawan, 
                m_jabatan.nama as nama_jabatan'
        )
            ->from($this->table)
            ->join('left join', 'karyawan', 'karyawan.id = '.$this->table.'.karyawan_id')
            ->join('left join', 'karyawan_data', 'karyawan_data.id = karyawan.karyawan_data_id')
            ->join('left join', 'k_jabatan', 'karyawan_data.id = k_jabatan.karyawan_id and k_jabatan.aktif = 1')
            ->join('left join', 'm_jabatan', 'm_jabatan.id = k_jabatan.m_jabatan_id')
            ->where('karyawan.m_perusahaan_id', '=', $_SESSION['user']['m_perusahaan']['id'])
        ;

        if (null != $tanggal_awal && null != $tanggal_akhir) {
            $this->db->andWhere($this->table.'.tgl_kasbon', '>=', $tanggal_awal)
                ->andWhere($this->table.'.tgl_kasbon', '<=', $tanggal_akhir)
            ;
        }

        if ('null' != $params['karyawan_id'] && '' != $params['karyawan_id']) {
            $this->db->andWhere($this->table.'.karyawan_id', '=', $params['karyawan_id']);
        }

        if ('null' != $params['status'] && '' != $params['status']) {
            $this->db->andWhere($this->table.'.status', '=', $params['status']);
        }

        $models = $this->db->findAll();
        $kasbonId = [];
        foreach ($models as $key => $val) {
            $kasbonId[] = $val->id;
        }

        // Ambil pembayaran
        if (!empty($kasbonId)) {
            $bayar = $this->db->select('*')
                ->from('t_kasbon_bayar_det')
                ->customWhere('t_kasbon_id IN ('.implode(',', $kasbonId).')')
                ->findAll()
            ;

            $arrBayar = [];
            foreach ($bayar as $key => $value) {
                // $total = $value->bayar + ($value->bayar * $value->bunga / 100);
                $total = $value->bayar + $value->bunga;
                $arrBayar[$value->t_kasbon_id] = (isset($arrBayar[$value->t_kasbon_id]) ? $arrBayar[$value->t_kasbon_id] : 0) + $total;
            }
        }

        // Masukkan pembayaran
        foreach ($models as $key => $val) {
            $val->total_hutang = $val->jumlah + ($val->jumlah * $val->bunga / 100);
            $val->total_bayar = isset($arrBayar[$val->id]) ? $arrBayar[$val->id] : 0;
            $val->tgl_kasbon = date('d/m/Y', strtotime($val->tgl_kasbon));
        }

        return [
            'status' => true,
            'data' => $models,
            'periode' => null != $tanggal_awal && null != $tanggal_akhir ? date('d/m/Y', strtotime($tanggal_awal)).' s/d '.date('d/m/Y', strtotime($tanggal_akhir)) : null,
        ];
    }
}

