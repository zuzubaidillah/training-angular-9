<?php

namespace Model;

use Service\Db;

class LaporanKelengkapanPelatihan extends ModelCore
{
    /**
     * simpan class Landa DB ke variabel #db.
     */
    private $db;

    /**
     * variabel untuk menyimpan nama tabel.
     */
    private $table;

    /**
     * konstruktor memanggil library landa Db.
     */
    public function __construct()
    {
        $this->db = Db::db();
        $this->table = 'k_pelatihan';
    }

    /**
     * Ambil semua data perusahaan.
     *
     * @param array  $params
     * @param int    $limit
     * @param int    $offset
     * @param string $order
     */
    public function getAll($params = [], $limit = 0, $offset = 0, $order = '')
    {
        $this->db->select('k_pelatihan.karyawan_id as karyawan_id, k_pelatihan.m_pelatihan_id as pelatihan_id, karyawan.nama as karyawan_nama, m_pelatihan.nama as pelatihan_nama')
            ->from($this->table)
            ->leftJoin('karyawan', $this->table.'.karyawan_id = karyawan.id')
            ->leftJoin('m_pelatihan', $this->table.'.m_pelatihan_id = m_pelatihan.id')
            ->where($this->table.'.is_deleted', '=', 0)
            // ->customWhere('k_pelatihan.m_pelatihan_id IS NULL', 'AND')
            ;
        if (isset($params['karyawan']) && !empty($params['karyawan']) && '' != $params['karyawan'] && 'null' != $params['karyawan']) {
            $this->db->andWhere($this->table.'.karyawan_id', '=', $params['karyawan']);
        }
        if (isset($params['jenisPelatihan']) && !empty($params['jenisPelatihan']) && '' != $params['jenisPelatihan'] && 'null' != $params['jenisPelatihan']) {
            $this->db->andWhere($this->table.'.jenis', 'LIKE', $params['jenisPelatihan']);
        }

        // Filter
        if (isset($params['filter'])) {
            $filter = (array) json_decode($params['filter']);
            foreach ($filter as $key => $val) {
                $this->db->where($key, 'like', $val);
            }
        }
        // Set limit
        if (isset($params['limit']) && !empty($params['limit'])) {
            $this->db->limit($params['limit']);
        }
        // Set offset
        if (isset($params['offset']) && !empty($params['offset'])) {
            $this->db->offset($params['offset']);
        }
        $models = $this->db->findAll();
        $totalItem = $this->db->count();

        $arrModels = [];
        $idMPelatihan = $this->db->select('id, nama')->from('m_pelatihan')->findAll();
        $index = 0;
        foreach ($models as $key) {
            foreach ($idMPelatihan as $k) {
                if ($k->id != $key->pelatihan_id) {
                    $arrModels[$key->karyawan_id]['nama'] = $key->karyawan_nama;
                    $arrModels[$key->karyawan_id]['pelatihan'][$index] = $k->nama;
                    ++$index;
                }
            }
            $index = 0;
        }

        return [
            'data' => array_values($arrModels),
            'totalItem' => $totalItem,
        ];
    }

    public function download($file)
    {
        parent::downloadFile($file);

        return true;
    }

    public function print($params)
    {
        $print = '<html><body onload="window.print()">';
        $print .= '<style type="text/css"> table, th, td {border: 1px solid black;} ul.listpel {list-style-type: decimal; } </style>';
        $print .= '<div"><h4>Laporan Riwayat Jabatan</h4></div>';
        $print .= '<table>
                            <thead class="thead-light">
                                <tr>
                                    <th>Nama</th>
                                    <th>Pelatihan Belum Diikuti</th>
                                </tr>
                            </thead>
                            <tbody>';
        foreach ($params as $key) {
            $print .= '<tr>';
            $print .= '<td>'.$key['nama'].'</td>';
            $print .= '<td> <ul class="listPel">';
            foreach ($key['pelatihan'] as $pel) {
                $print .= '<li>'.$pel.'</li>';
            }
            $print .= '</ul></td>';
            $print .= '</tr>';
        }
        $print .= '</tbody></table>';
        $print .= '</body></html>';

        return [
            'data' => $print,
            'status' => true,
        ];
    }

    /**
     * Validasi data yang dikirim.
     *
     * @param array $data
     * @param array $custom
     */
    public function validasi($data, $custom = [])
    {
        $validasi = [
            'nama' => 'required',
        ];

        return validate($data, $validasi, $custom);
    }
}

