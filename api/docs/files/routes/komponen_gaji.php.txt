<?php

use Model\Formula;
use Model\KomponenGaji;
use Service\Landa;

// Ambil semua KomponenGaji
$app->get('/komponen_gaji/tunjangan', function ($request, $response) {
    $params = $request->getParams();
    $komgaji = new KomponenGaji();
    $getDataKomGaji = $komgaji->getTunjangan($params);

    return successResponse($response, [
        'list' => $getDataKomGaji['data'],
        'totalItems' => $getDataKomGaji['totalItem'],
    ]);
});

// Ambil semua KomponenGaji
$app->get('/komponen_gaji/potongan', function ($request, $response) {
    $params = $request->getParams();
    $komgaji = new KomponenGaji();
    $getDataKomGaji = $komgaji->getPotongan($params);

    return successResponse($response, [
        'list' => $getDataKomGaji['data'],
        'totalItems' => $getDataKomGaji['totalItem'],
    ]);
});

// Ambil semua KomponenGaji
$app->get('/komponen_gaji/manfaat', function ($request, $response) {
    $params = $request->getParams();
    $komgaji = new KomponenGaji();
    $getDataKomGaji = $komgaji->getManfaat($params);

    return successResponse($response, [
        'list' => $getDataKomGaji['data'],
        'totalItems' => $getDataKomGaji['totalItem'],
    ]);
});

// Save KomponenGaji
$app->post('/komponen_gaji/save', function ($request, $response) {
    $data = $request->getParams();
    // print_r($data);die;
    $landa = new Landa();
    $komgaji = new KomponenGaji();
    $formula = new Formula();
    $validasi = $komgaji->validasi($data['model']);
    if (true === $validasi) {
        /**
         * Proses simpan ke dalam database.
         */
        $save = $komgaji->save($data);
        if ($save['status']) {
            if (0 == $save['data']->is_formula) {
                $params['formula'][] = [
                    'children' => [],
                    'parent_id' => '',
                    'reff_id' => '',
                    'reff_type' => 0,
                    'm_komponen_gaji_id' => $save['data']->id,
                    'value' => $save['data']->nilai,
                ];
            } else {
                $params['formula'] = $data['formula'];
            }
            $saveformula = $formula->saveformula($params['formula'], 'm_komponen_gaji_id', $save['data']->id);
            if ($saveformula['status']) {
                return successResponse($response, $data);
            }
        }

        return unprocessResponse($response, [$save['error']]);
    }

    return unprocessResponse($response, $validasi);
});

// Hapus KomponenGaji
$app->post('/komponen_gaji/delete', function ($request, $response) {
    $data = $request->getParams();
    $komgaji = new KomponenGaji();
    $isdelete['model']['is_deleted'] = 1;
    $isdelete['model']['id'] = $data['id'];
    $model = $komgaji->save($isdelete);
    if ($model['status']) {
        return successResponse($response, $model);
    }

    return unprocessResponse($response, [$save['error']]);
});

//FORMULA

// Ambil formula
$app->get('/komponen_gaji/getFormula', function ($request, $response) {
    $params = $request->getParams();
    $formula = new Formula();
    $landa = new Landa();
    $getFormula = $formula->getFormula($params['reff_type'], $params['id']);

    foreach ($getFormula['data'] as $key => $value) {
        $arrChild[] = [
            'id' => $value->id,
            'm_komponen_gaji_id' => isset($value->m_komponen_gaji_id) ? $value->m_komponen_gaji_id : null,
            'm_reimbursement_id' => isset($value->m_reimbursement_id) ? $value->m_reimbursement_id : null,
            'reff_type' => $value->reff_type,
            'reff_id' => $value->reff_id,
            'reff_list' => [],
            'value' => $value->value,
            'parent_id' => $value->parent_id,
        ];
    }
    if (isset($arrChild) && !empty($arrChild)) {
        $tree = $landa->buildTree($arrChild);
    } else {
        $tree[] = [
            'id' => '',
            'm_komponen_gaji_id' => '',
            'm_reimbursement_id' => '',
            'reff_type' => '',
            'reff_id' => '',
            'reff_list' => [],
            'value' => '',
            'parent_id' => '',
            'children' => [],
        ];
    }

    return successResponse($response, [
        'list' => $tree,
    ]);
});
// Hapus level jabatan
$app->post('/komponen_gaji/deleteformula', function ($request, $response) {
    $params = $request->getParams();
    // print_r($params[0]['id']);die;
    $id_komponen = $params[0]['id'];
    $landa = new Landa();
    $formula = new Formula();
    $delete = $formula->hapusformula($id_komponen);
    if ($delete['status']) {
        return successResponse($response, [$delete['data']]);
    }

    return unprocessResponse($response, [$delete['error']]);
});
$app->get('/komponen_gaji/getOption/{id}', function ($request, $response) {
    $params = $request->getParams();
    $id = $request->getAttribute('id');

    $formula = new Formula();
    $getDataFormula = $formula->getOpsi($id);

    return successResponse($response, ['list' => $getDataFormula['data']]);
});

